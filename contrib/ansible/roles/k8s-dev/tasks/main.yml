---
# tasks file for k8s-dev
- name: essential tools
  become: yes
  package:
    name: "{{ item }}"
  with_items:
    - git
    - gpg
    - jq
    - make
    - python3-pip
- name: python modules
  become: yes
  pip:
    name:
      - yq
- name: microk8s
  become: yes
  block:
    - name: microk8s install
      snap:
        name: microk8s
        channel: "{{ microk8s.snap.channel }}"
        classic: yes
    - name: kubectl and helm3 install
      snap:
        name: "{{ item }}"
        state: present
        classic: yes
      with_items:
        - kubectl
        - helm
    - name: microk8s group membership
      user:
        name: "{{ item }}"
        append: yes
        groups: microk8s
      with_items:
        - "{{ 'ubuntu' if not ansible_local.vagrant.default.user else ansible_local.vagrant.default.user }}"
    - name: KUBECONFIG kubectl setup
      copy:
        content: |
          DIR="${HOME}/.kube"
          if which kubectl &>/dev/null; then
            [ -d "${DIR}" ] || mkdir -p "${DIR}"
            if ! [ -f "${DIR}/microk8s.config" ]; then
              if which microk8s &>/dev/null; then
                umask 0077
                microk8s config | sed 's/\(user\|name\): admin/\1: microk8s-admin/' > "${DIR}/microk8s.config"
              fi
            fi
            KUBECONFIG="$(find $DIR \( -name 'config' -o -name '*.config' \) \( -type f -o -type l \) -print0 | tr '\0' ':')"
            KUBECONFIG="${KUBECONFIG%:}"
            export KUBECONFIG
          fi
        dest: /etc/profile.d/KUBECONFIG.sh
    - name: kubectl config for ansible user
      shell: >
        [ -d {{ ansible_user_dir }}/.kube ] || mkdir -p {{ ansible_user_dir }}/.kube; \
        microk8s config | sed "s/\(user\|name\): admin/\1: microk8s-admin/" > {{ ansible_user_dir }}/.kube/microk8s.config
      args:
        creates: "{{ ansible_user_dir }}/.kube/microk8s.config"
    - name: Wait for microk8s to start
      changed_when: false
      shell: "microk8s status --format yaml --wait-ready --timeout 60"
      register: microk8s_status
    - name: microk8s FACTS
      copy:
        content: |
          #!/usr/bin/env python3
          import json
          import subprocess
          import yaml
          try:
              microk8sStatus = subprocess.run(["microk8s","status","--format yaml"], capture_output=True, timeout=5, check=True)
              print(json.dumps(yaml.load(microk8sStatus.stdout, Loader=yaml.FullLoader)))
          except:
              print("{}")
        dest: /etc/ansible/facts.d/microk8s.fact
        mode: 0755
      register: microk8s_facts
    - name: FACTS reload
      ansible.builtin.setup:
        filter: ansible_local
      when: microk8s_facts.changed
    - name: microk8s enable features
      command: microk8s enable {{ item }}
      with_items:
        - ha-cluster
        - dns
        - ingress
        - rbac
        - registry
        - storage
      when: (ansible_local.microk8s.addons | selectattr('name','contains', item ) | first).status == "disabled"
- name: Docker engine install
  become: yes
  block:
    - name: Docker prereq.
      package:
        name: "{{ item }}"
      with_items:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common
    - name: Docker GPG key
      apt_key:
        id: 0EBFCD88
        state: present
        url: https://download.docker.com/linux/ubuntu/gpg
    - name: Docker repository
      apt_repository:
        repo: >
          deb
          [arch={{ ansible_architecture|replace('x86_64','amd64') }}]
          https://download.docker.com/linux/ubuntu
          {{ ansible_distribution_release }}
          stable
        state: present
        update_cache: yes
    - name: Docker install
      package:
        name: "{{ item }}"
      with_items:
        - docker-ce
        - docker-ce-cli
        - containerd.io
    - name: Docker group membership
      user:
        append: yes
        name: "{{ item }}"
        groups: [ "docker" ]
      with_items:
        - "{{ 'ubuntu' if not ansible_local.vagrant.default.user else ansible_local.vagrant.default.user }}"
    - name: Docker microk8s insecure-registries
      copy:
        content: |
          {
              "insecure-registries" : ["localhost:32000"]
          }
        dest: /etc/docker/daemon.json
      register: docker_daemon_json
    - name: restart Docker service
      service:
        name: docker
        state: restarted
      when: docker_daemon_json.changed
- name: Packer
  become: yes
  block:
    - name: Packer apt-key
      apt_key:
        state: present
        url: https://apt.releases.hashicorp.com/gpg
    - name: HashiCorp repository
      apt_repository:
        repo: >
          deb
          [arch={{ ansible_architecture|replace('x86_64','amd64') }}]
          https://apt.releases.hashicorp.com
          {{ ansible_distribution_release }}
          main
        state: present
        update_cache: yes
    - name: Packer install
      package:
        name: packer
- name: SOPS
  become: yes
  block:
    - name: SOPS download
      get_url:
        dest: "/usr/local/bin"
        url: "https://github.com/mozilla/sops/releases/download/v3.6.1/sops-v3.6.1.linux"
        mode: 0755
    - name: SOPS symlink
      file:
        path: "/usr/local/bin/sops"
        src: "/usr/local/bin/sops-v3.6.1.linux"
        state: link
- name: git-secrets
  become: yes
  package:
    name: git-secrets
    state: latest
