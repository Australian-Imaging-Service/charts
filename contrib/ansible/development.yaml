---
# development.yaml
# Run using `ansible-playbook -clocal localhost development.yaml`
- hosts: all
  tasks:
    - name: essential tools
      package:
        name: "{{ item }}"
      with_items:
        - git
        - gpg
        - make
      become: yes
    - name: microk8s
      become: yes
      block:
        - name: microk8s install
          snap:
            name: microk8s
            channel: 1.19/stable
            classic: yes
        - name: kubectl and helm3 install
          snap:
            name: "{{ item }}"
            state: present
            classic: yes
          with_items:
            - kubectl
            - helm
        - name: microk8s group membership
          user:
            name: "{{ item }}"
            append: yes
            groups: microk8s
          with_items:
            - "{{ 'ubuntu' if not ansible_local.vagrant.default.user else ansible_local.vagrant.default.user }}"
        - name: KUBECONFIG kubectl setup
          copy:
            content: |
              DIR="${HOME}/.kube"
              if which kubectl &>/dev/null; then
                [ -d "${DIR}" ] || mkdir -p "${DIR}"
                if ! [ -f "${DIR}/microk8s.config" ]; then
                  which microk8s &>/dev/null && \
                    microk8s config | sed 's/\(user\|name\): admin/\1: microk8s-admin/' > "${DIR}/microk8s.config"
                fi
                KUBECONFIG="$(find $DIR \( -name 'config' -o -name '*.config' \) \( -type f -o -type l \) -print0 | tr '\0' ':')"
                KUBECONFIG="${KUBECONFIG%:}"
                export KUBECONFIG
              fi
            dest: /etc/profile.d/KUBECONFIG.sh
        - name: microk8s enable features
          command: microk8s enable {{ item }}
          with_items:
            - ha-cluster
            - dns
            - ingress
            - rbac
            - registry
            - storage
    - name: Docker engine install
      become: yes
      block:
        - name: Docker prereq.
          package:
            name: "{{ item }}"
          with_items:
            - apt-transport-https
            - ca-certificates
            - curl
            - gnupg-agent
            - software-properties-common
        - name: Docker GPG key
          apt_key:
            id: 0EBFCD88
            state: present
            url: https://download.docker.com/linux/ubuntu/gpg
        - name: Docker repository
          apt_repository:
            repo: >
              deb
              [arch={{ ansible_architecture|replace('x86_64','amd64') }}]
              https://download.docker.com/linux/ubuntu
              {{ ansible_distribution_release }}
              stable
            state: present
            update_cache: yes
        - name: Docker install
          package:
            name: "{{ item }}"
          with_items:
            - docker-ce
            - docker-ce-cli
            - containerd.io
        - name: Docker group membership
          user:
            append: yes
            name: "{{ item }}"
            groups: [ "docker" ]
          with_items:
            - "{{ 'ubuntu' if not ansible_local.vagrant.default.user else ansible_local.vagrant.default.user }}"
    - name: Packer
      become: yes
      block:
        - name: Packer apt-key
          apt_key:
            state: present
            url: https://apt.releases.hashicorp.com/gpg
        - name: HashiCorp repository
          apt_repository:
            repo: >
              deb
              [arch={{ ansible_architecture|replace('x86_64','amd64') }}]
              https://apt.releases.hashicorp.com
              {{ ansible_distribution_release }}
              main
            state: present
            update_cache: yes
        - name: Packer install
          package:
            name: packer
    - name: SOPS
      become: yes
      block:
        - name: SOPS download
          get_url:
            dest: "/usr/local/bin"
            url: "https://github.com/mozilla/sops/releases/download/v3.6.1/sops-v3.6.1.linux"
            mode: 0755
        - name: SOPS symlink
          file:
            path: "/usr/local/bin/sops"
            src: "/usr/local/bin/sops-v3.6.1.linux"
            state: link
    - name: git-secrets
      become: yes
      package:
        name: git-secrets
        state: latest
