# Default values for monai-label.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  storageClassName: ""

app: /home/user/apps/radiology
studies: /home/user/datasets/Task09_Spleen/imagesTr
#studies: ""
#studies: http://127.0.0.1:8042/dicom-web
#studies: https://d28o5kq0jsoob5.cloudfront.net/dicomweb
conf:
  models: all

datasets: Task09_Spleen

appDir: /home/user/apps
#appDir: /usr/local/monailabel/apps
datasetDir: /home/user/datasets

auth:
  enabled: false
  realmUri: http://localhost:8080/realms/monailabel
  timeout: 10
  token:
    username: preferred_username
    email: email
    name: name
    roles: realm_access#roles
  clientId: monailabel-app
  role:
    admin: monailabel-admin
    reviewer: monailabel-reviewer
    annotator: monailabel-annotator
    user: monailabel-user

extraCerts: ""

logging:
  # critical, error, warning, info, debug, trace
  logLevel: info
  accessLog: false

shmSize: 64Mi

# OAuth2 Proxy as a standalone reverse-proxy
# Upstream https://github.com/oauth2-proxy/oauth2-proxy
# For more information and settings visit
# https://github.com/oauth2-proxy/manifests/tree/main/helm/oauth2-proxy
oauth2-proxy:
  enabled: false
  config:
    clientID: ""
    clientSecret: ""
    cookieSecret: ""
    configFile: |-
      provider = "keycloak-oidc"
      provider_display_name = "keycloak@fake.sydney.edu.au"
      oidc_issuer_url = "https://keycloak.fake.sydney.edu.au/realms/fake"
      redirect_url = "https://monai-label.fake.sydney.edu.au/oauth2/callback"
      email_domains = [
        "*"
      ]
      code_challenge_method = "S256"
      ssl_insecure_skip_verify = true
      insecure_oidc_allow_unverified_email = true
      request_logging = true
  service:
    portNumber: 4180
  ingress:
    enabled: true
    className: nginx
    path: /oauth2
    pathType: Prefix
    annotations:
      # ISSUE upstream sent too big header
      nginx.ingress.kubernetes.io/proxy-buffer-size: "256k"
    hosts:
      - monai-label.fake.sydney.edu.au
    tls:
    - hosts:
        - monai-label.fake.sydney.edu.au
      secretName: monai-label-tls

replicaCount: 1

image:
  repository: projectmonai/monailabel
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "sha256:f067de68f2f0e663c136d41dafcd92c0afa6f4930ed96238563f837449697ffe"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  fsGroup: 10000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 10000

service:
  type: ClusterIP
  port: 8000

ingress:
  enabled: false
  annotations: {}
  #  kubernetes.io/tls-acme: "true"
  #  nginx.ingress.kubernetes.io/affinity: "cookie"
  #  nginx.ingress.kubernetes.io/affinity-mode: "persistent"
  #  nginx.ingress.kubernetes.io/proxy-body-size: "0"
  #  nginx.ingress.kubernetes.io/session-cookie-name: "monailabel"
  #  nginx.ingress.kubernetes.io/session-cookie-change-on-failure: "false"
  className: ""
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  #   nvidia.com/gpu: 1
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http
startupProbe:
  httpGet:
    path: /
    port: http
  periodSeconds: 5
  failureThreshold: 60

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false
# - name: cacerts
#   secret:
#     optional: true
#     secretName: ca-cert

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true
# - mountPath: /etc/ssl/certs/
#   name: cacerts

nodeSelector: {}

tolerations: []
# - key: nvidia.com/gpu
#   operator: Exists
#   effect: NoSchedule

affinity: {}
