# Default values for monai-label.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

apps: radiology
datasets: Task09_Spleen
studies: datasets/Task09_Spleen/imagesTr
#studies: http://127.0.0.1:8042/dicom-web
#studies: https://d28o5kq0jsoob5.cloudfront.net/dicomweb
conf:
  models: all

appDir: /usr/local/monailabel/apps
logging:
  # critical, error, warning, info, debug, trace
  logLevel: debug
  accessLog: true

# cmd: monailabel apps --download --name radiology --output apps
# cmd: monailabel datasets --download --name Task09_Spleen --output datasets
cmd: monailabel start_server --apps apps/radiology --studies datasets/Task09_Spleen/imagesTr --conf models deepedit
shmSize: 64Mi

replicaCount: 1

image:
  repository: projectmonai/monailabel
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "sha256:f067de68f2f0e663c136d41dafcd92c0afa6f4930ed96238563f837449697ffe"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  fsGroup: 10000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 10000

service:
  type: ClusterIP
  port: 8000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  #   nvidia.com/gpu: 1
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http
startupProbe:
  httpGet:
    path: /
    port: http
  periodSeconds: 5
  failureThreshold: 60

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []
# - key: nvidia.com/gpu
#   operator: Exists
#   effect: NoSchedule

affinity: {}
