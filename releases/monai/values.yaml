# Default values for monai.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global: {}

shmSize: 64Mi

services:
  tensorboard:
    type: ClusterIP
    port: 6006
  jupyter:
    type: ClusterIP
    port: 8888

replicaCount: 1

image:
  repository: projectmonai/monai
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  fsGroup: &FSGROUP 1000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: *FSGROUP

# DEPRECATE
service:
  type: ClusterIP
  port: 8888

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   nvidia.com/gpu: 1
  #   memory: 128Mi

#livenessProbe:
#  httpGet:
#    path: /
#    port: jupyter
#readinessProbe:
#  httpGet:
#    path: /
#    port: jupyter
#startupProbe:
#  httpGet:
#    path: /
#    port: jupyter
#  failureThreshold: 30
#  periodSeconds: 10

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false
#- name: jupyter-runtime
#  emptyDir: {}
#- name: ipython
#  emptyDir: {}
- name: home
  emptyDir: {}
#- name: shm-device
#  emptyDir:
#    medium: Memory
#    sizeLimit: 500Mi
# FileNotFoundError: [Errno 2] No usable temporary directory found in ['/tmp', '/var/tmp', '/usr/tmp', '/opt/monai']
- name: tmp-dir
  emptyDir: {}

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true
#- name: jupyter-runtime
#  mountPath: /.local/share/jupyter/runtime
#- name: ipython
#  mountPath: /tmp
- name: home
  mountPath: /home/user
#- name: shm-device
#  mountPath: /dev/shm
- name: tmp-dir
  mountPath: /tmp

nodeSelector:
  kubernetes.io/arch: amd64
  kubernetes.io/os: linux

tolerations: []

affinity: {}
