# Default values for ctp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/australian-imaging-service/mirc-ctp
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

services:
  web:
    # Enable when a web management console is needed
    enabled: true
    type: ClusterIP
    port: 80
    targetPort: 1080
    # may need to use NodePort for your cloud provider's ingress plugin
    # type: NodePort
    # nodePort: 30001
  httpsimport:
    # Typically for institutional site CTP
    enabled: true
    type: LoadBalancer
    port: 443
    targetPort: 443
    nodePort: 30002
  dicomimport:
    # Typically for clinical site CTP 
    enabled: true
    type: NodePort
    port: 8104
    targetPort: 8104
    nodePort: 30003

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: "nginx"
    # kubernetes.io/tls-acme: "true"
    # nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  hosts: []
    # - chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

users:
  # Specify users of different roles, use custom values to increase security
  admin:
   password: "126680608771750945340162210354335764377"
   roles:
     - admin
  import:
   password: "126680608771750945340162210354335764377"
   roles:
     - import

timezone: Australia/Perth

config: |
  <?xml version="1.0" encoding="UTF-8"?>
  <Configuration>
    <Server
      port="1080"
      requireAuthentication="yes"
    />
    <Pipeline name="Main_Pipeline">
      <DicomImportService
        name="DicomImportService"
        id="DicomImportService"
        class="org.rsna.ctp.stdstages.DicomImportService"
        root="roots/DicomImportService"
        port="8104"
        calledAETTag="00097770" 
        callingAETTag="00097772"
        connectionIPTag="00097774"
        throttle="0"
        logConnections="no"
        logDuplicates="no"
        suppressDuplicates="no" />
      <HttpImportService
        name="HttpImportService"
        id="HttpImportService"
        class="org.rsna.ctp.stdstages.HttpImportService"
        root="roots/HttpImportService"
        quarantine="roots/HttpImportService/quarantine"
        port="443"
        ssl="yes"
        zip="yes"
        requireAuthentication="yes"
        acceptDicomObjects="yes"
        acceptXmlObjects="yes"
        acceptZipObjects="yes"
        acceptFileObjects="yes"
        logConnections="no"
        logDuplicates="no" />
      <FileStorageService
        name="FileStorageService"
        id="FileStorageService"
        class="org.rsna.ctp.stdstages.FileStorageService"
        root="roots/FileStorageService"
        quarantine="roots/FileStorageService/quarantine"
        returnStoredFile="no"
        ssl="yes"
        timeDepth="1"
        type="day"/>
      <!-- Send to XNAT directly
      <HttpExportService
        name="HttpExportService"
        id="HttpExportService"
        username="XnatUser"
        password="XnatUserPassword"
        acceptXmlObjects="no"
        acceptZipObjects="no"
        class="org.rsna.ctp.stdstages.HttpExportService"
        url="https://YourXnatUrl:443/data/services/import?import-handler=DICOM-zip&amp;inbody=true"
        root="roots/HttpExportService"
        quarantine="roots/HttpExportService/quarantine"
        sendDigestHeader="yes"
        interval="5000">
        <compressor
          cacheSize="100"
          defaultString="unknown"
          structure="(0010,0020).(0010,0010)"/>
        <xnat
          cookieName="JSESSIONID"
          url="https://YourXnatUrl:443/data/JSESSION"/>        
      </HttpExportService>
      -->
      <!-- Send to the other CTP endpoint
      <HttpExportService
        name="HttpExportService"
        id="HttpExportService"
        class="org.rsna.ctp.stdstages.HttpExportService"
        root="roots/HttpExportService" 
        quarantine="roots/HttpExportService/quarantine"
        url="https://TheOtherCtp:443"
        zip="yes"
        sendDigestHeader="yes"
        username="CtpImportUserName"
        password="CtpImportUserPassword"
        acceptDicomObjects="yes"
        acceptXmlObjects="yes"
        acceptZipObjects="yes"
        acceptFileObjects="yes"
        dicomScript="scripts/df.script"
        xmlScript="scripts/xf.script"
        zipScript="scripts/zf.script"
        logDuplicates="yes"
        auditLogID="0008,0050"
        auditLogTags="PatientID;SOPInstanceUID;StudyInstanceUID;InstanceNumber"
        interval="10000" />
      -->
    </Pipeline>
  </Configuration>

launcherProperties: |
  ms=128
  mx=512

proxyServer:
  ipAddress: ""
  port: 3129
  username: ""
  password: ""

volumes:
  roots:
    accessMode: ReadWriteMany
    #existingClaim: ""
    mountPath: "/vol/roots"
    #storageClassName: "-"
    size: 10Gi

