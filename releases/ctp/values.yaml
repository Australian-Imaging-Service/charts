# Default values for ctp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/australian-imaging-service/mirc-ctp
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

services: {}
  # web:
  #   enabled: true
  #   type: ClusterIP
  #   port: 80
  #   targetPort: 80
  #   nodePort: 30001
  # httpsimport:
  #   enabled: false
  #   type: LoadBalancer
  #   port: 443
  #   targetPort: 443
  #   nodePort: 30002
  # dicomimport:
  #   enabled: true
  #   type: NodePort
  #   port: 8104
  #   targetPort: 25055
  #   nodePort: 30004

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: "nginx"
    # kubernetes.io/tls-acme: "true"
    # nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  hosts: {}
    # - chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

users: {}
  #admin:
  #  password: "126680608771750945340162210354335764377"
  #  roles:
  #    - admin
  #king:
  #  password: "126680608771750945340162210354335764377"
  #  roles:
  #    - admin
  #    - shutdown

timezone: Australia/Perth

config: |
  <?xml version="1.0" encoding="UTF-8"?>
    <Configuration>
      <Server
        port="80"
        requireAuthentication="yes"
      />
    </Configuration>

launcherProperties: |
  ms=128
  mx=512

# ports:
#   web: 24050
#   dicomImportService: 25055

pipelines: {}
  #Main_Pipeline:
  #  desc: "Main Pipeline"
  #  stages:
  #    - name: "DicomImportService"
  #      root: "roots/dicom-import"
  #      port: 1104
  #    - name: "FileStorageService"
  #      root: "storage"
  #      returnStoredFile: false
  #      quarantine: "quarantines/storage"
  #    - name: "DicomAnonymizer"
  #      root: "roots/anonymizer"
  #      script: "scripts/da.script"
  #      quarantine: "quarantines/anonymizer"
  #    - name: "HttpExportService"
  #      root: "roots/http-export"
  #      url: "https://university.edu:1443"

proxyServer:
  ipAddress: ""
  port: 3129
  username: ""
  password: ""

volumes:
  roots:
    accessMode: ReadWriteMany
    #existingClaim: ""
    mountPath: "/vol/roots"
    #storageClassName: "-"
    size: 10Gi
  # quarantines:
  #   accessMode: ReadWriteMany
  #   #existingClaim: ""
  #   mountPath: "/vol/quarantines"
  #   #storageClassName: "-"
  #   size: 1Ti
  # logs:
  #   accessMode: ReadWriteMany
  #   #existingClaim: ""
  #   mountPath: "/vol/roots"
  #   #storageClassName: "-"
  #   size: 1Mi
  # scripts:
  #   accessMode: ReadWriteMany
  #   #existingClaim: ""
  #   mountPath: "/vol/roots"
  #   #storageClassName: "-"
  #   size: 10Gi
