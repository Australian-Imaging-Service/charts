# Default values for xnat-web.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  postgresql: {}
    # postgresqlDatabase: ""
    # postgresqlUser: ""
    # postgresqlPassword: ""
    # servicePort: 5432

replicaCount: 1

image:
  repository: registry.gitlab.com/cerds/xnat-deploy
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # nginx.ingress.kubernetes.io/whitelist-source-range: "130.95.0.0/16"
    # nginx.ingress.kubernetes.io/proxy-connect-timeout: "150"
    # nginx.ingress.kubernetes.io/proxy-send-timeout: "100"
    # nginx.ingress.kubernetes.io/proxy-read-timeout: "100"
    # nginx.ingress.kubernetes.io/proxy-buffers-number: "4"
    # nginx.ingress.kubernetes.io/proxy-buffer-size: "32k"
  hosts:
    - "chart-example.local"
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

persistence:
  cache:
    accessMode: ReadWriteOnce
    mountPath: "/data/xnat/cache"
    # storageClassName: "-"
    size: 10Gi
  work:
    accessMode: ReadWriteOnce
    mountPath: "/data/xnat/home/work"
    # storageClassName: "-"
    size: 1Gi
  logs:
    accessMode: ReadWriteOnce
    mountPath: "/data/xnat/home/logs"
    # storageClassName: "-"
    size: 1Gi
  plugins:
    accessMode: ReadWriteOnce
    mountPath: "/data/xnat/home/plugins"
    # storageClassName: "-"
    size: 0

volumes:
  archive:
    accessMode: ReadWriteMany
    #existingClaim: ""
    mountPath: "/data/xnat/archive"
    #storageClassName: "-"
    size: 1Ti
  prearchive:
    accessMode: ReadWriteMany
    #existingClaim: ""
    mountPath: "/data/xnat/prearchive"
    # storageClassName: "-"
    size: 1Ti

plugin:
  download: false
  plugins:
    ldap:
      filename: xnat-ldap-auth-plugin-1.0.0.jar
      url: "https://bitbucket.org/xnatx/ldap-auth-plugin/downloads/xnat-ldap-auth-plugin-1.0.0.jar"
    openid:
      enabled: true
      filename: xnat-openid-auth-plugin-all-1.0.2.jar
      url: "https://github.com/Australian-Imaging-Service/xnat-openid-auth-plugin/releases/download/1.0.2/xnat-openid-auth-plugin-all-1.0.2.jar"
      providers: 
        aaf:
          accessTokenUrl: https://central.aaf.edu.au/providers/op/token
          userAuthUri: https://central.aaf.edu.au/providers/op/authorize
          clientId: AAFClientID
          clientSecret: AAFClientSecrect
          allowedEmailDomains: AllowedDomain1,AllowedDomain2
        google:
          accessTokenUrl: https://www.googleapis.com/oauth2/v3/token
          userAuthUri: https://accounts.google.com/o/oauth2/auth
          clientId: ""
          clientSecret: ""
          allowedEmailDomains: ""

authentication:
  methods:
    ldap:
      # https://wiki.xnat.org/documentation/xnat-administration/configuring-authentication-providers
      providers:
        # uniquely identifies the provider in case there are multiple providers of a given type
        ldap1:
          name: "Institution Active Directory"
          address: ""
          userdn: ""
          password: ""
          search:
            base: ""
            filter: "(sAMAccountName={0})"
    openid:
      # https://github.com/NrgXnat/xnat-openid-auth-plugin
      name: "OpenID Authentication Provider"
      disableUsernamePasswordLogin: false
      preEstablishedRedirUri: "/openid-login"
      siteUrl: ""
      # List of providers that appear on the login page
      providers:
        aaf:
          # https://support.aaf.edu.au/support/solutions/articles/19000096640-openid-connect-
          accessTokenUri: https://central.aaf.edu.au/providers/op/token
          #accessTokenUri: https://central.test.aaf.edu.au/providers/op/token
          userAuthUri: https://central.aaf.edu.au/providers/op/authorize
          #userAuthUri: https://central.test.aaf.edu.au/providers/op/authorize
          clientId: ""
          clientSecret: ""
          scopes: [ openid, profile, email ]
          link: '<p>To sign-in using your AAF credentials, please click on the button below.</p><p><a href="/openid-login?providerId=aaf"><img src="/images/aaf_service_223x54.png" /></a></p>'
          # Flag that sets if we should be checking email domains
          # Domains below are the only ones allowed to login, empty array allows ALL domains
          allowedEmailDomains: []
          #  - uwa.edu.au
          #  - sydney.edu.au
          #  - uq.edu.au
          # Flag to force the user creation process, normally this should be set to true
          forceUserCreate: true
          # Flag to set the enabled property of new users, set to false to allow admins to manually enable users before allowing logins, set to true to allow access right away
          userAutoEnabled: false
          # Flag to set the verified property of new users
          userAutoVerified: false
          # Property names to use when creating users
          propertyNames:
            email: email
            givenName: name
            familyName: deliberately_unknown_property
        google:
          accessTokenUri: https://www.googleapis.com/oauth2/v3/token
          userAuthUri: https://accounts.google.com/o/oauth2/auth
          clientId: ""
          clientSecret: ""
          scopes: [ openid, profile, email ]
          link: '<p>To sign-in using your Google credentials, please click on the button below.</p></p><p><a href="/openid-login?providerId=google"> <img src="/images/btn_google_signin_dark_normal_web.png" /> </a></p>'
          # Flag that sets if we should be checking email domains
          shouldFilterEmailDomains: false
          # Domains below are allowed to login, only checked when 'shouldFilterEmailDomains' is true
          allowedEmailDomains: []
          #  - uwa.edu.au
          #  - sydney.edu.au
          # Flag to force the user creation process, normally this should be set to true
          forceUserCreate: true
          # Flag to set the enabled property of new users, set to false to allow admins to manually enable users before allowing logins, set to true to allow access right away
          userAutoEnabled: false
          # Flag to set the verified property of new users
          userAutoVerified: false
          # Property names to use when creating users
          propertyNames:
            email: email
            givenName: given_name
            familyName: family_name

# https://wiki.xnat.org/documentation/xnat-administration/connecting-xnat-to-dicom-scanners-and-pacs
# DICOM C-STORE Service Class Provider (SCP)
# DICOM Application Entity (AE)
dicom_scp:
  serviceType: "NodePort"
  annotations: {}
  #  metallb.universe.tf/address-pool: production-public-ips
  #  metallb.universe.tf/allow-shared-ip: true
  recievers:
    - ae_title: "XNAT"
      port: 8104
      # nodePort: 32514
      # loadBalancerIp: "130.95.27.91"

postgresql:
  postgresqlDatabase: "xnat"
  postgresqlUsername: "xnat"
  postgresqlPassword: "xnat"

