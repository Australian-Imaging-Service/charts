apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "xnat-web.fullname" . }}
  labels:
    {{- include "xnat-web.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "xnat-web.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "xnat-web.fullname" . }}
  template:
    metadata:
      annotations:
        {{- with .Values.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        checksum/config: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        {{- include "xnat-web.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "xnat-web.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          #livenessProbe:
          #  httpGet:
          #    path: /
          #    port: http
          readinessProbe:
            httpGet:
              path: /app/template/Login.vm#!
              port: http
          #startupProbe:
          #  httpGet:
          #    path: /
          #    port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: auth
              mountPath: "/k8s-secrets/auth"
              readOnly: true
            - name: config
              mountPath: "/k8s-secrets/config"
              readOnly: true
            {{- range $name, $c := .Values.persistence }}
            {{- if $c.size }}
            - mountPath: {{ $c.mountPath | quote }}
              name: {{ $name | quote }}
            {{- end }}
            {{- end }}
            {{- range $name, $c := .Values.volumes }}
            - mountPath: {{ $c.mountPath | quote }}
              name: {{ $name | quote }}
            {{- end }}
      {{- if and .Values.plugin.download .Values.persistence.plugins }}
      initContainers:
        {{- range $plugin, $c := .Values.plugin.plugins }}
        - name: download-plugin-{{ $plugin }}
          image: alpine:3.12.1
          command:
            - 'sh'
            - '-c'
            - |
              set -x
              url_filename=$(echo {{ $c.url | quote }} |awk -F'/' '{print $NF}')
              [ -f "/plugins/${url_filename}" ] || wget -P/plugins {{ $c.url | quote }}
          volumeMounts:
            - mountPath: /plugins
              name: plugins
        {{- end }}
      {{- end }}
      volumes:
        - name: auth
          secret:
            secretName: {{ include "xnat-web.fullname" . }}-auth
        - name: config
          secret:
            secretName: {{ include "xnat-web.fullname" . }}
        {{- $context := . -}}
        {{- range $name, $c := .Values.volumes }}
        - name: {{ $name }}
          persistentVolumeClaim:
            claimName: {{ $name }}-{{ include "xnat-web.fullname" $context }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    {{- range $name, $c := .Values.persistence }}
    {{- if $c.size }}
    - metadata:
        name: {{ $name | quote }}
      spec:
        accessModes: [ {{ $c.accessMode | quote }} ]
        {{- if $c.storageClassName }}
        storageClassName: {{ $c.storageClassName | quote }}
        {{- end }}
        volumeMode: Filesystem
        resources:
          requests:
            storage: {{ $c.size }}
    {{- end }}
    {{- end }}
