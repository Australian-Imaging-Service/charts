apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "xnat-web.fullname" . }}
  labels:
    {{- include "xnat-web.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "xnat-web.statefulsetLabels" . | nindent 6 }}
  serviceName: {{ include "xnat-web.fullname" . }}
  template:
    metadata:
      annotations:
        {{- with .Values.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        {{- include "xnat-web.statefulsetLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "xnat-web.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- $request := trimSuffix "Mi" .Values.resources.requests.memory }}
          env:
          {{- if .Values.nonheapmem }}
          {{- $nonheap := trimSuffix "Mi" .Values.nonheapmem }}
            - name: CATALINA_OPTS
              value: -Xms{{ sub $request $nonheap }}m -Xmx{{ sub $request $nonheap }}m -Dxnat.home=/data/xnat/home
          {{- end }}
            - name: TZ
              value: {{ .Values.timezone }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.probes.liveness | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.probes.readiness | nindent 12 }}
          startupProbe:
            {{- toYaml .Values.probes.startup | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: passwd
              mountPath: /etc/passwd
              readOnly: true
              subPath: passwd
            - name: tomcat
              mountPath: /usr/local/tomcat
            - name: conf-catalina
              mountPath: /usr/local/tomcat/conf/Catalina
            - name: xnat-home
              mountPath: /data/xnat/home
            - name: home-plugins
              mountPath: /data/xnat/home/plugins
            - name: xnat-config-d
              mountPath: "/data/xnat/home/config"
              readOnly: true
            {{- range $plugin, $p := .Values.plugins }}
            {{- range $p }}
            {{- if .auth }}
            - name: auth-{{ .provider.id }}
              mountPath: /data/xnat/home/config/auth/{{ .provider.id }}-provider.properties
              readOnly: true
              subPath: {{ .provider.id }}-provider.properties
            {{- end }}
            {{- end }}
            {{- end }}
            {{- range $name, $c := .Values.persistence }}
            {{- if $c.size }}
            - mountPath: {{ $c.mountPath | quote }}
              name: {{ $name | quote }}
            {{- end }}
            {{- end }}
            {{- range $name, $c := .Values.volumes }}
            {{- if $c.size }}
            - mountPath: {{ $c.mountPath | quote }}
              name: {{ $name | quote }}
              {{- if $c.mountPropagation }}
              mountPropagation: {{$c.mountPropagation|default "None"|quote}}
              {{- end }}
            {{- end }}
            {{- end }}
        - name: {{ .Chart.Name }}-pluginlogs
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: debian:bullseye-slim
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ["/bin/bash", "-c", "while [ ! -f /data/xnat/home/logs/*.log ]; do sleep 15; done; tail -f /data/xnat/home/logs/*.log;"]
          volumeMounts:
            - name: xnat-home
              mountPath: /data/xnat/home
      initContainers:
        - name: config
          image: ghcr.io/sydneyresearchtech/debian
          command: [bash, -c]
          args:
            - |
              set -x
              PGJDBCURI="jdbc:postgresql://${PGHOST}:${PGPORT}/${PGDATABASE}"
              export PGJDBCURI
              mkdir -p /data/xnat/home/config/auth
              for f in /k8s_config/*; do
                file="$(basename ${f})"
                envsubst < /k8s_config/${file} > /data/xnat/home/config/${file}
              done
          env:
            - name: PGDATABASE
              {{- (include "xnat-web.postgresql.database" .) | nindent 14 }}
            - name: PGHOST
              {{- (include "xnat-web.postgresql.host" .) | nindent 14 }}
            - name: PGPASSWORD
              {{- (include "xnat-web.postgresql.password" .) | nindent 14 }}
            - name: PGPORT
              {{- (include "xnat-web.postgresql.port" .) | nindent 14 }}
            - name: PGUSER
              {{- (include "xnat-web.postgresql.user" .) | nindent 14 }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          volumeMounts:
            - name: xnat-config-d
              mountPath: /data/xnat/home/config
            - name: xnat-config
              mountPath: /k8s_config
              readOnly: true
        - name: home-init
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: [bash, -c]
          args:
            - |
              set -x
              shopt -s extglob
              plugins=( {{ join " " (keys .Values.plugins) }} )
              # Copy Tomcat folder
              [ -d /TOMCAT ] && cp -r --preserve=mode,timestamps /usr/local/tomcat/* /TOMCAT
              chown -R {{ default "1000" .Values.securityContext.runAsUser }} /TOMCAT
              # Copy XNAT_HOME directory excluding the plugins folder
              cp -r --preserve=mode,timestamps ${XNAT_HOME}/!(plugins) /XNAT_HOME
              #chown -R {{ default "1000" .Values.securityContext.runAsUser }} /XNAT_HOME
              # Copy plugins that are configured in values.yml
              for plugin in ${plugins[@]}; do
                cp -r --preserve=mode,timestamps ${XNAT_HOME}/plugins/${plugin}-* /HOME-PLUGINS || true
              done
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          volumeMounts:
            - name: tomcat
              mountPath: /TOMCAT
            - name: xnat-home
              mountPath: /XNAT_HOME
            - name: home-plugins
              mountPath: /HOME-PLUGINS
      volumes:
        - name: xnat-config-d
          emptyDir: {}
        - name: passwd
          configMap:
            name: {{ include "xnat-web.fullname" . }}
            items:
              - key: passwd
                path: passwd
        - name: tomcat
          emptyDir: {}
        # SEVERE: Unable to create directory for deployment: [/usr/local/tomcat/conf/Catalina/localhost]
        - name: conf-catalina
          emptyDir: {}
        - name: xnat-home
          emptyDir: {}
        - name: home-plugins
          emptyDir: {}
        {{- range $plugin, $p := .Values.plugins }}
        {{- range $p }}
        {{- if .auth }}
        - name: auth-{{ .provider.id }}
          secret:
            secretName: {{ include "xnat-web.fullname" $ }}-plugin-{{ $plugin }}
            items:
              - key: {{ .provider.id }}-provider.properties
                path: {{ .provider.id }}-provider.properties
        {{- end }}
        {{- end }}
        {{- end }}
        - name: xnat-config
          configMap:
            name: {{ include "xnat-web.fullname" . }}-config
        {{- $context := . -}}
        {{- range $name, $c := .Values.volumes }}
        {{- if $c.size }}
        - name: {{ $name }}
          persistentVolumeClaim:
            claimName: {{ $c.existingClaim | default (printf "%s-%s" (include "xnat-web.fullname" $context) $name) }}
        {{- end }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    {{- range $name, $c := .Values.persistence }}
    {{- if not $c.existingClaim }}
    {{- if $c.size }}
    - metadata:
        name: {{ $name | quote }}
      spec:
        accessModes: [ {{ $c.accessMode | quote }} ]
        {{- if (or $c.storageClass $.Values.global.storageClass) }}
        storageClassName: {{ $c.storageClass | default $.Values.global.storageClass | quote }}
        {{- end }}
        volumeMode: Filesystem
        resources:
          requests:
            storage: {{ $c.size }}
    {{- end }}
    {{- end }}
    {{- end }}
