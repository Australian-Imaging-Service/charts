{{- if and .Values.postgresql.enabled
           false -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "xnat.postgresql.fullname" . }}
  labels:
    {{- include "xnat.labels" . | nindent 4 }}
  annotations:
    "helm.sh/resource-policy": "keep"
type: Opaque
data:
  # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace (include "xnat.postgresql.fullname" .)) | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  # set to existing secret data or generate a random one when not exists
  {{- $PGPASSWORD := (get $secretData "PGPASSWORD") | default (randAlphaNum 32 | b64enc) }}
  PGPASSWORD: {{ $PGPASSWORD | quote }}
{{- end }}
